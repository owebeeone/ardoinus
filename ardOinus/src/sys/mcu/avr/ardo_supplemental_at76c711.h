// Generated for arch at76c711.
// This file is generated from the avr-gcc compiler with the mcu
// set to at76c711 from macros specific to avr/io.h.
// Any changes to this file will likely be lost next time this file
// is regenerated. Many any mcu_arch specific changes to 
// ardo_supplemental_at76c711_defs.h.

#ifndef ardo_supplemental_at76c711__h
#define ardo_supplemental_at76c711__h

#include "setlx_cstdint.h"
#include "setl_bit_fields.h"
#include "ardo_avr_bit_io_defs.h"

namespace ardo {
namespace sys {
namespace avr {
namespace arch_at76c711 {

constexpr ptrdiff_t cc__SFR_OFFSET = 0x20;

template <typename T, ptrdiff_t w_addr>
using IoRegisterDef = avr::nfp::IoRegisterDef<T, w_addr, cc__SFR_OFFSET>;
using avr::nfp::MemRegisterDef;

using rrCLK_CNTR = IoRegisterDef<std::uint8_t, 0x14>;
constexpr unsigned ccCOM00 = 4;
constexpr unsigned ccCOM01 = 5;
constexpr unsigned ccCOM1A0 = 6;
constexpr unsigned ccCOM1A1 = 7;
constexpr unsigned ccCOM1B0 = 4;
constexpr unsigned ccCOM1B1 = 5;
constexpr unsigned ccCPHA = 2;
constexpr unsigned ccCPOL = 3;
constexpr unsigned ccCS00 = 0;
constexpr unsigned ccCS01 = 1;
constexpr unsigned ccCS02 = 2;
constexpr unsigned ccCS10 = 0;
constexpr unsigned ccCS11 = 1;
constexpr unsigned ccCS12 = 2;
constexpr unsigned ccCSR0 = 0x0DF;
constexpr unsigned ccCSR1 = 0x0DE;
constexpr unsigned ccCSR2 = 0x0DD;
constexpr unsigned ccCSR3 = 0x0DC;
constexpr unsigned ccCSR4 = 0x0DB;
constexpr unsigned ccCSR5 = 0x0DA;
constexpr unsigned ccCSR6 = 0x0D9;
constexpr unsigned ccCSR7 = 0x0D8;
constexpr unsigned ccCTC0 = 3;
constexpr unsigned ccCTC1 = 3;
constexpr unsigned ccDD0 = 0;
constexpr unsigned ccDD1 = 1;
constexpr unsigned ccDD2 = 2;
constexpr unsigned ccDD3 = 3;
constexpr unsigned ccDD4 = 4;
constexpr unsigned ccDD5 = 5;
constexpr unsigned ccDD6 = 6;
constexpr unsigned ccDD7 = 7;
constexpr unsigned ccDDA0 = 0;
constexpr unsigned ccDDA1 = 1;
constexpr unsigned ccDDA2 = 2;
constexpr unsigned ccDDA3 = 3;
constexpr unsigned ccDDA4 = 4;
constexpr unsigned ccDDA5 = 5;
constexpr unsigned ccDDA6 = 6;
constexpr unsigned ccDDA7 = 7;
constexpr unsigned ccDDB0 = 0;
constexpr unsigned ccDDB1 = 1;
constexpr unsigned ccDDB2 = 2;
constexpr unsigned ccDDB3 = 3;
constexpr unsigned ccDDB4 = 4;
constexpr unsigned ccDDB5 = 5;
constexpr unsigned ccDDB6 = 6;
constexpr unsigned ccDDB7 = 7;
constexpr unsigned ccDDD0 = 0;
constexpr unsigned ccDDD1 = 1;
constexpr unsigned ccDDD2 = 2;
constexpr unsigned ccDDD3 = 3;
constexpr unsigned ccDDD4 = 4;
constexpr unsigned ccDDD5 = 5;
constexpr unsigned ccDDD6 = 6;
constexpr unsigned ccDDD7 = 7;
using rrDDRA = IoRegisterDef<std::uint8_t, 0x1A>;
using rrDDRB = IoRegisterDef<std::uint8_t, 0x17>;
using rrDDRD = IoRegisterDef<std::uint8_t, 0x11>;
constexpr unsigned ccDMA_BASE = 0x2000;
constexpr unsigned ccDORD = 5;
constexpr unsigned ccE2END = 0;
constexpr unsigned ccECR0 = 0x0EF;
constexpr unsigned ccECR1 = 0x0EE;
constexpr unsigned ccECR2 = 0x0ED;
constexpr unsigned ccECR3 = 0x0EC;
constexpr unsigned ccECR4 = 0x0EB;
constexpr unsigned ccECR5 = 0x0EA;
constexpr unsigned ccECR6 = 0x0E9;
constexpr unsigned ccECR7 = 0x0E8;
using rrEIMSK = IoRegisterDef<std::uint8_t, 0x39>;
constexpr unsigned ccEN = 0;
constexpr unsigned ccENDPPGPG = 0x0F1;
constexpr unsigned ccEXTRF = 1;
constexpr unsigned ccFADDR = 0x0F2;
constexpr unsigned ccFBYTE_CNT0_H = 0x0AF;
constexpr unsigned ccFBYTE_CNT0_L = 0x0BF;
constexpr unsigned ccFBYTE_CNT1_H = 0x0AE;
constexpr unsigned ccFBYTE_CNT1_L = 0x0BE;
constexpr unsigned ccFBYTE_CNT2_H = 0x0AD;
constexpr unsigned ccFBYTE_CNT2_L = 0x0BD;
constexpr unsigned ccFBYTE_CNT3_H = 0x0AC;
constexpr unsigned ccFBYTE_CNT3_L = 0x0BC;
constexpr unsigned ccFBYTE_CNT4_H = 0x0AB;
constexpr unsigned ccFBYTE_CNT4_L = 0x0BB;
constexpr unsigned ccFBYTE_CNT5_H = 0x0AA;
constexpr unsigned ccFBYTE_CNT5_L = 0x0BA;
constexpr unsigned ccFBYTE_CNT6_H = 0x0A9;
constexpr unsigned ccFBYTE_CNT6_L = 0x0B9;
constexpr unsigned ccFBYTE_CNT7_H = 0x0A8;
constexpr unsigned ccFBYTE_CNT7_L = 0x0B8;
constexpr unsigned ccFDR0 = 0x0CF;
constexpr unsigned ccFDR1 = 0x0CE;
constexpr unsigned ccFDR2 = 0x0CD;
constexpr unsigned ccFDR3 = 0x0CC;
constexpr unsigned ccFDR4 = 0x0CB;
constexpr unsigned ccFDR5 = 0x0CA;
constexpr unsigned ccFDR6 = 0x0C9;
constexpr unsigned ccFDR7 = 0x0C8;
constexpr unsigned ccFLASHEND = 0x3FFF;
constexpr unsigned ccFRM_NUM_H = 0x0FD;
constexpr unsigned ccFRM_NUM_L = 0x0FC;
constexpr unsigned ccGLB_STATE = 0x0FB;
constexpr unsigned ccICES1 = 6;
constexpr unsigned ccICF1 = 3;
constexpr unsigned ccICNC1 = 7;
using rrICR1 = IoRegisterDef<std::uint16_t, 0x26>;
using rrICR1H = IoRegisterDef<std::uint8_t, 0x27>;
using rrICR1L = IoRegisterDef<std::uint8_t, 0x26>;
constexpr unsigned ccINT0 = 0;
constexpr unsigned ccINT1 = 1;
constexpr unsigned ccINTCST = 0x0D;
constexpr unsigned ccIRCK = 2;
constexpr unsigned ccIRDA = 2;
using rrIRDAMOD = IoRegisterDef<std::uint8_t, 0x20>;
constexpr unsigned ccIRQ_EN = 0x101;
constexpr unsigned ccIRQ_STAT = 0x102;
constexpr unsigned ccLOCKBITS_DEFAULT = 0xFF;
using rrMCUCR = IoRegisterDef<std::uint8_t, 0x35>;
using rrMCUSR = IoRegisterDef<std::uint8_t, 0x34>;
constexpr unsigned ccMODE = 1;
constexpr unsigned ccMSTR = 4;
constexpr unsigned ccOCF1A = 6;
constexpr unsigned ccOCF1B = 5;
constexpr unsigned ccOCIE1A = 6;
constexpr unsigned ccOCIE1B = 5;
using rrOCR1A = IoRegisterDef<std::uint16_t, 0x2A>;
using rrOCR1AH = IoRegisterDef<std::uint8_t, 0x2B>;
using rrOCR1AL = IoRegisterDef<std::uint8_t, 0x2A>;
using rrOCR1B = IoRegisterDef<std::uint16_t, 0x28>;
using rrOCR1BH = IoRegisterDef<std::uint8_t, 0x29>;
using rrOCR1BL = IoRegisterDef<std::uint8_t, 0x28>;
constexpr unsigned ccPA0 = 0;
constexpr unsigned ccPA1 = 1;
constexpr unsigned ccPA2 = 2;
constexpr unsigned ccPA3 = 3;
constexpr unsigned ccPA4 = 4;
constexpr unsigned ccPA5 = 5;
constexpr unsigned ccPA6 = 6;
constexpr unsigned ccPA7 = 7;
constexpr unsigned ccPA_EN = 0x104;
constexpr unsigned ccPB0 = 0;
constexpr unsigned ccPB1 = 1;
constexpr unsigned ccPB2 = 2;
constexpr unsigned ccPB3 = 3;
constexpr unsigned ccPB4 = 4;
constexpr unsigned ccPB5 = 5;
constexpr unsigned ccPB6 = 6;
constexpr unsigned ccPB7 = 7;
constexpr unsigned ccPC0 = 0;
constexpr unsigned ccPC1 = 1;
constexpr unsigned ccPC2 = 2;
constexpr unsigned ccPC3 = 3;
constexpr unsigned ccPD0 = 0;
constexpr unsigned ccPD1 = 1;
constexpr unsigned ccPD2 = 2;
constexpr unsigned ccPD3 = 3;
constexpr unsigned ccPD4 = 4;
constexpr unsigned ccPD5 = 5;
constexpr unsigned ccPD6 = 6;
constexpr unsigned ccPD7 = 7;
using rrPERIPHEN = IoRegisterDef<std::uint8_t, 0x13>;
constexpr unsigned ccPIN0 = 0;
constexpr unsigned ccPIN1 = 1;
constexpr unsigned ccPIN2 = 2;
constexpr unsigned ccPIN3 = 3;
constexpr unsigned ccPIN4 = 4;
constexpr unsigned ccPIN5 = 5;
constexpr unsigned ccPIN6 = 6;
constexpr unsigned ccPIN7 = 7;
using rrPINA = IoRegisterDef<std::uint8_t, 0x19>;
constexpr unsigned ccPINA0 = 0;
constexpr unsigned ccPINA1 = 1;
constexpr unsigned ccPINA2 = 2;
constexpr unsigned ccPINA3 = 3;
constexpr unsigned ccPINA4 = 4;
constexpr unsigned ccPINA5 = 5;
constexpr unsigned ccPINA6 = 6;
constexpr unsigned ccPINA7 = 7;
using rrPINB = IoRegisterDef<std::uint8_t, 0x16>;
constexpr unsigned ccPINB0 = 0;
constexpr unsigned ccPINB1 = 1;
constexpr unsigned ccPINB2 = 2;
constexpr unsigned ccPINB3 = 3;
constexpr unsigned ccPINB4 = 4;
constexpr unsigned ccPINB5 = 5;
constexpr unsigned ccPINB6 = 6;
constexpr unsigned ccPINB7 = 7;
using rrPIND = IoRegisterDef<std::uint8_t, 0x10>;
constexpr unsigned ccPIND0 = 0;
constexpr unsigned ccPIND1 = 1;
constexpr unsigned ccPIND2 = 2;
constexpr unsigned ccPIND3 = 3;
constexpr unsigned ccPIND4 = 4;
constexpr unsigned ccPIND5 = 5;
constexpr unsigned ccPIND6 = 6;
constexpr unsigned ccPIND7 = 7;
constexpr unsigned ccPOL = 2;
constexpr unsigned ccPOL0 = 2;
constexpr unsigned ccPOL1 = 3;
constexpr unsigned ccPORF = 0;
constexpr unsigned ccPORT0 = 0;
constexpr unsigned ccPORT1 = 1;
constexpr unsigned ccPORT2 = 2;
constexpr unsigned ccPORT3 = 3;
constexpr unsigned ccPORT4 = 4;
constexpr unsigned ccPORT5 = 5;
constexpr unsigned ccPORT6 = 6;
constexpr unsigned ccPORT7 = 7;
using rrPORTA = IoRegisterDef<std::uint8_t, 0x1B>;
using rrPORTB = IoRegisterDef<std::uint8_t, 0x18>;
using rrPORTC = IoRegisterDef<std::uint8_t, 0x15>;
using rrPORTD = IoRegisterDef<std::uint8_t, 0x12>;
using rrPRELD = IoRegisterDef<std::uint8_t, 0x31>;
constexpr unsigned ccPROGRAM_MEMORY_CONTROL_BIT = 0x2040;
constexpr unsigned ccRAMEND = 0x07FF;
constexpr unsigned ccRAMSTART = 0x60;
constexpr unsigned ccRSPLL = 0x09;
constexpr unsigned ccRXPLM = 0x0A;
constexpr unsigned ccRXTADL = 0x07;
constexpr unsigned ccRXTADMEN = 0x08;
constexpr unsigned ccRXTPLL = 0x0B;
constexpr unsigned ccRXTPLM = 0x0C;
constexpr unsigned ccSE = 5;
constexpr unsigned ccSLEEP_MODE_IDLE = 0;
constexpr unsigned ccSLP_MD_EN = 0x100;
constexpr unsigned ccSM0 = 3;
constexpr unsigned ccSM1 = 4;
using rrSP = IoRegisterDef<std::uint16_t, 0x3D>;
using rrSPCR = IoRegisterDef<std::uint8_t, 0x0D>;
using rrSPDR = IoRegisterDef<std::uint8_t, 0x0F>;
constexpr unsigned ccSPE = 6;
using rrSPH = IoRegisterDef<std::uint8_t, 0x3E>;
constexpr unsigned ccSPIE = 7;
constexpr unsigned ccSPIF = 7;
using rrSPL = IoRegisterDef<std::uint8_t, 0x3D>;
constexpr unsigned ccSPR0 = 0;
constexpr unsigned ccSPR1 = 1;
constexpr unsigned ccSPRSIE = 0x0F9;
constexpr unsigned ccSPRSR = 0x0FA;
using rrSPSR = IoRegisterDef<std::uint8_t, 0x0E>;
using rrSREG = IoRegisterDef<std::uint8_t, 0x3F>;
constexpr unsigned ccSREG_C = 0;
constexpr unsigned ccSREG_H = 5;
constexpr unsigned ccSREG_I = 7;
constexpr unsigned ccSREG_N = 2;
constexpr unsigned ccSREG_S = 4;
constexpr unsigned ccSREG_T = 6;
constexpr unsigned ccSREG_V = 3;
constexpr unsigned ccSREG_Z = 1;
constexpr unsigned ccSUSP_WUP = 0x103;
using rrTCCR0 = IoRegisterDef<std::uint8_t, 0x33>;
using rrTCCR1A = IoRegisterDef<std::uint8_t, 0x2F>;
using rrTCCR1B = IoRegisterDef<std::uint8_t, 0x2E>;
using rrTCNT0 = IoRegisterDef<std::uint8_t, 0x32>;
using rrTCNT1 = IoRegisterDef<std::uint16_t, 0x2C>;
using rrTCNT1H = IoRegisterDef<std::uint8_t, 0x2D>;
using rrTCNT1L = IoRegisterDef<std::uint8_t, 0x2C>;
constexpr unsigned ccTICIE1 = 3;
using rrTIFR = IoRegisterDef<std::uint8_t, 0x36>;
using rrTIMSK = IoRegisterDef<std::uint8_t, 0x37>;
constexpr unsigned ccTOIE0 = 1;
constexpr unsigned ccTOIE1 = 7;
constexpr unsigned ccTOV0 = 1;
constexpr unsigned ccTOV1 = 7;
constexpr unsigned ccTXPLL = 0x03;
constexpr unsigned ccTXPLM = 0x04;
constexpr unsigned ccTXTADL = 0x01;
constexpr unsigned ccTXTPLL = 0x05;
constexpr unsigned ccTXTPLM = 0x06;
constexpr unsigned ccUART = 1;
constexpr unsigned ccUART0_BASE = 0x2020;
constexpr unsigned ccUART1_BASE = 0x2030;
constexpr unsigned ccUCK = 3;
constexpr unsigned ccUIAR = 0x0F5;
constexpr unsigned ccUISR = 0x0F7;
constexpr unsigned ccUOSC = 4;
constexpr unsigned ccUSB = 0;
constexpr unsigned ccUSB_BASE = 0x1000;
constexpr unsigned ccUSB_DMA_ADH = 0x106;
constexpr unsigned ccUSB_DMA_ADL = 0x105;
constexpr unsigned ccUSB_DMA_EAD = 0x108;
constexpr unsigned ccUSB_DMA_EN = 0x10A;
constexpr unsigned ccUSB_DMA_PLR = 0x107;
constexpr unsigned ccUSB_DMA_PLT = 0x109;
constexpr unsigned ccUS_BL = 0x07;
constexpr unsigned ccUS_BM = 0x08;
constexpr unsigned ccUS_CR = 0x06;
constexpr unsigned ccUS_CSR = 0x05;
constexpr unsigned ccUS_FCR = 0x02;
constexpr unsigned ccUS_IER = 0x01;
constexpr unsigned ccUS_MR = 0x04;
constexpr unsigned ccUS_PMR = 0x03;
constexpr unsigned ccUS_RHR = 0x00;
constexpr unsigned ccUS_RTO = 0x09;
constexpr unsigned ccUS_THR = 0x00;
constexpr unsigned ccUS_TTG = 0x0A;
constexpr unsigned ccWCOL = 6;
constexpr unsigned ccWDE = 3;
constexpr unsigned ccWDP0 = 0;
constexpr unsigned ccWDP1 = 1;
constexpr unsigned ccWDP2 = 2;
using rrWDTCR = IoRegisterDef<std::uint8_t, 0x21>;
constexpr unsigned ccWDTOE = 4;
constexpr unsigned cc_HAVE_AVR_STACK_POINTER_HI = 1;
constexpr unsigned cc_SFR_ASM_COMPAT = 0;
constexpr unsigned cc_VECTORS_SIZE = 60;
constexpr unsigned cc__USING_MINT8 = 0;


}  // arch_at76c711
}  // namespace avr
}  // namespace sys
}  // namespace ardo

#endif  // ardo_supplemental_at76c711__h
